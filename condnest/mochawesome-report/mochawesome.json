{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2021-07-13T08:33:33.332Z",
    "end": "2021-07-13T08:33:39.390Z",
    "duration": 6058,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "484b30a7-66a2-4159-a62b-3fa6304279d4",
      "title": "",
      "fullFile": "cypress/integration/1-getting-started/artical_assertion_test.spec.js",
      "file": "cypress/integration/1-getting-started/artical_assertion_test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "29e5ef6a-45c1-451e-9c6f-aac8dc073a27",
          "title": "condenast API response testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Assert the response body with different methods",
              "fullTitle": "condenast API response testing Assert the response body with different methods",
              "timedOut": null,
              "duration": 4853,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Response from mock API response\ncy.request('GET', '/?us_site=y&format=json', {\n  fixtures: 'response.json'\n}).then(res => {\n  //Response form server API response\n  //  cy.request('GET','/?us_site=y&format=json').then((res)=>{\n  expect(res.status).to.be.equal(200);\n  expect(res.body).not.to.be.null; //description of the story\n  //using contains text to assert it \n  cy.fixture('july_month').then(data => {\n    expect(res.body.bundle.containers[0].items[0].dangerousDek).to.be.contains(data.desription); //Description Head\n    //using equal method to assert it\n    expect(res.body.bundle.containers[0].items[0].dangerousHed).to.be.equal(data.heading); //Story author\n    //using include method to assert it\n    expect(res.body.bundle.containers[0].items[0].contributors.author.items[0].name).to.be.include(data.author);\n  });\n});",
              "err": {},
              "uuid": "a25f2801-4227-4e7b-a34b-5a818eef46e8",
              "parentUUID": "29e5ef6a-45c1-451e-9c6f-aac8dc073a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get the all container name",
              "fullTitle": "condenast API response testing get the all container name",
              "timedOut": null,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', '/?us_site=y&format=json').then(res => {\n  let len = res.body.bundle.containers.length;\n  for (let i = 0; i < len; i++) {\n    cy.log(res.body.bundle.containers[i].dangerousHed);\n  }\n});",
              "err": {},
              "uuid": "541fb5c9-7a1a-47ad-9f16-d355b9430cb8",
              "parentUUID": "29e5ef6a-45c1-451e-9c6f-aac8dc073a27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get the Artical Title, Description and Author of first container",
              "fullTitle": "condenast API response testing Get the Artical Title, Description and Author of first container",
              "timedOut": null,
              "duration": 563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', '/?us_site=y&format=json').then(res => {\n  let len = res.body.bundle.containers[0].items.length;\n  cy.log(len);\n  for (let i = 0; i < len; i++) {\n    cy.log(`Artial Title  = ${res.body.bundle.containers[0].items[i].dangerousHed}`);\n    cy.log(`Artical Description  = ${res.body.bundle.containers[0].items[i].dangerousDek}`);\n    cy.log(`Artical Author = ${res.body.bundle.containers[0].items[i].contributors.author.items[0].name}`);\n  }\n});",
              "err": {},
              "uuid": "ee348d61-ef9d-4be0-9e61-a3b097698fc1",
              "parentUUID": "29e5ef6a-45c1-451e-9c6f-aac8dc073a27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a25f2801-4227-4e7b-a34b-5a818eef46e8",
            "541fb5c9-7a1a-47ad-9f16-d355b9430cb8",
            "ee348d61-ef9d-4be0-9e61-a3b097698fc1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6000,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}